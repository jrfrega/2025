source('/Users/jfrega/Documents/R/GeraProvas/StdHeader.R')
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = mquantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
mhist(idades.1, normdist = TRUE)
mhist(idades, normdist = TRUE)
mhist(idades.1, normdist = TRUE)
mh(idades.1)
mh(idades.1, dist = "exp")
mh(idades.1, dist = "lnorm")
mh
mh(idades.1, dist = "gamma")
mh(idades.1, dist = "norm")
mhist(idades.1, normdist = TRUE)
hist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
hist(idades.1, normdist = TRUE)
global_env::hist(idades.1)
Global_Env::hist(idades.1)
GlobalEnv::hist(idades.1)
library(graphics)
hist(idades.1)
rm("hist")
hist(idades.1)
hist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
hist(idades.1)
rm("hist")
hist(idades.1)
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
hist = mhist
hist(idades.1)
hist = graphics::hist
hist(idades.1)
hist = mhist
hist(idades.1)
hist = graphics::hist
hist(idades.1)
hist = mhist
hist(idades.1)
hist = graphics::hist
hist(idades.1)
library(pdftools)
source('/Users/jfrega/Documents/R/GeraProvas/StdHeader.R')
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
sapply(a, function(x) stringi::stri_locate(x, fixed = "dia(s)")) %>% as.numeric -> b
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "mes(es)")) %>% as.numeric -> b
if(length(b)>0) c(idades, rep(1, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = mquantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
idades
library(pdftools)
source('/Users/jfrega/Documents/R/GeraProvas/StdHeader.R')
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = mquantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
#
# Aqui a gente volta a usar a função padrão
hist = graphics::hist
hist(idades.1)
library(pdftools)
source('/Users/jfrega/Documents/R/GeraProvas/StdHeader.R')
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = mquantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
print(deparse(substitute(xx)))
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
#
# Aqui a gente volta a usar a função padrão
hist = graphics::hist
hist(idades.1)
library(pdftools)
source('/Users/jfrega/Documents/R/GeraProvas/StdHeader.R')
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = mquantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, main = NULL, ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
if(is.null(main)) main = paste0("Histograma de ", deparse(substitute(xx)))
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub, main = main)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
#
# Aqui a gente volta a usar a função padrão
hist = graphics::hist
hist(idades.1)
library(pdftools)
source('/Users/jfrega/Documents/R/GeraProvas/StdHeader.R')
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = mquantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, main = NULL, xlab = deparse(substitute(xx)), ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
if(is.null(main)) main = paste0("Histograma de ", deparse(substitute(xx)))
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub, main = main, xlab = xlab)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
#
# Aqui a gente volta a usar a função padrão
hist = graphics::hist
hist(idades.1)
a = 0
for(i in 1:50000000) {
a = a + sqrt(i)
}
a %>% sprintf("%15.6f", .) %>% cat
library(pdftools)
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = quantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, main = NULL, xlab = deparse(substitute(xx)), ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
if(is.null(main)) main = paste0("Histograma de ", deparse(substitute(xx)))
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub, main = main, xlab = xlab)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
#
# Aqui a gente volta a usar a função padrão
hist = graphics::hist
hist(idades.1)
library(pdftools)
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = quantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, main = NULL, xlab = deparse(substitute(xx)), ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
if(is.null(main)) main = paste0("Histograma de ", deparse(substitute(xx)))
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub, main = main, xlab = xlab)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
# Também podemos chamar diretamente a função redefinida
mhist(idades.1)
#
# Aqui a gente volta a usar a função padrão
hist = graphics::hist
hist(idades.1)
a = 0
for(i in 1:5000000) {
a = a + sqrt(i)
}
a %>% sprintf("%15.6f", .) %>% cat
library(pdftools)
dirname = "/Users/jfrega/Downloads/"
fnames = list.files(dirname, "Faleci*")
idades = NULL
for (fname in fnames) {
pdf_text(paste0(dirname,fname)) %>% strsplit(split = "[ \n\t]") %>% unlist -> a
a[nchar(a)>0] -> a
sapply(a, function(x) stringi::stri_locate(x, fixed = "ano(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
c(idades, a[which(!is.na(b[,1]))-1] %>% as.numeric) -> idades
sapply(a, function(x) stringi::stri_locate(x, fixed = "dias(s)")) %>% as.numeric -> b
b %>% matrix(ncol = 2, byrow = TRUE) -> b
b = b[,1]
b = b[which(!is.na(b))]
if(length(b)>0) c(idades, rep(0, length(b))) -> idades
}
c(idades %>% summary, n = idades %>% length)
idades %>% hist
q = quantile(idades)
IQR = q[c(2,4)] %>% diff
b = boxplot(idades, range = 1.5)
idades.1 <- idades[-which(idades%in%b$out)]
idades.1 %>% hist
summary(idades.1)
shapiro.test(idades.1)
#
# Coisinhas bacanas que dá pra fazer no R
# A função a seguir redefine a função histograma padrão colocando novas cores e
# desenhando uma distribuição normal superimposta ao histograma
mhist = function(xx, linecol = "blue", lwd = 2, col = "lightyellow", border = "darkgray", normdist = TRUE, main = NULL, xlab = deparse(substitute(xx)), ...) {
xxx = seq(min(xx), max(xx), length.out = 100)
if(is.null(main)) main = paste0("Histograma de ", deparse(substitute(xx)))
yyy = 0
if(normdist) yyy = dnorm(xxx, mean(xx), sd(xx))
h = graphics::hist(x = xx, ..., plot = FALSE)
sub = ""
if(normdist) sub = paste("Shapiro p-value", (shapiro.test(xx)$p.value %>% round(2)), collapse = " = ")
h = graphics::hist(x = xx, ..., freq = FALSE, plot = TRUE, ylim = c(0, max(c(h$density, yyy))), col = col, border = border, sub = sub, main = main, xlab = xlab)
if(normdist) {
curve(dnorm(x, mean(xx), sd(xx)), add = TRUE, col = linecol, lwd = lwd)
}
}
#
# Aqui a gente usa a função padrão
hist(idades.1)
#
# Aqui a gente troca a função padrão pela função redefinida
hist = mhist
hist(idades.1)
tseries::jarque.test(idades.1)
lmtest::jarque.test(idades.1)
moments::jarque.test(idades.1)
summary(idades.1)
c(summary(idades.1), n = idades.1 %>% length)
reticulate::repl_python()
